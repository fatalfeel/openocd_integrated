# Freescale i.MX8 series single/dual/quad core processor

if { [info exists CHIPNAME] } {
   set  _CHIPNAME $CHIPNAME
} else {
   set  _CHIPNAME imx8
}

# Debug Access Port
if { [info exists DAP_TAPID] } {
        set _DAP_TAPID $DAP_TAPID
} else {
        set _DAP_TAPID 0x5ba00477
}

jtag newtap $_CHIPNAME cpu -irlen 4 -ircapture 0x01 -irmask 0x0f \
        -expected-id $_DAP_TAPID

# SDMA / no IDCODE
#jtag newtap $_CHIPNAME sdma -irlen 4 -ircapture 0x00 -irmask 0x0f

# SOC JTAG ID / IDCODE refer to BSDL file
#if { [info exists SJC_TAPID] } {
#        set _SJC_TAPID $SJC_TAPID
#} else {
#        set _SJC_TAPID 0x1cf80553
#}
#set _SJC_TAPID1 0x2cf80553

#jtag newtap $_CHIPNAME sjc -irlen 5 -ircapture 0x01 -irmask 0x1f \
        -expected-id $_SJC_TAPID -expected-id $_SJC_TAPID1

dap create $_CHIPNAME.dap -chain-position $_CHIPNAME.cpu

# GDB target: Cortex-A53, using DAP, configuring only one core
# Coresight base address:
# core 0  -  0x80410000 / cti - 0x80420000
# core 1  -  0x80510000 / cti - 0x80520000
# core 2  -  0x80610000 / cti - 0x80620000
# core 3  -  0x80710000 / cti - 0x80720000
set _CTINAME $_CHIPNAME.cti.0
cti create $_CTINAME -dap $_CHIPNAME.dap -ap-num 1 -ctibase 0x80420000

set _TARGETNAME $_CHIPNAME.cpu.0
target create $_TARGETNAME aarch64 -dap $_CHIPNAME.dap -coreid 0 -dbgbase 0x80410000 -cti $_CTINAME

# declare the auxiliary Cortex-M4 core on AP #4
target create ${_CHIPNAME}.m4 cortex_m -dap ${_CHIPNAME}.dap -ap-num 4 \
               -defer-examine

# AHB-AP for direct access to soc bus
target create ${_CHIPNAME}.ahb mem_ap -dap ${_CHIPNAME}.dap -ap-num 0

proc imx8_dbginit {target} {
        # General Cortex-A53 debug initialisation
        aarch64 dbginit
}

# Slow speed to be sure it will work
adapter speed 1000

# default target is A53 cpu.0
targets $_TARGETNAME

# cpu.0 reset function
$_TARGETNAME configure -event reset-start { adapter speed 1000 }
$_TARGETNAME configure -event reset-assert-post "imx8_dbginit $_TARGETNAME"
